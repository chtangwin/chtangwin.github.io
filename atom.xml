<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>chtangwin</title><link href="https://chtangwin.github.io/" rel="alternate"></link><link href="http://chtangwin.github.io//atom.xml" rel="self"></link><id>https://chtangwin.github.io/</id><updated>2014-11-22T22:00:00-05:00</updated><entry><title>Doing Bayesian Data Analysis</title><link href="https://chtangwin.github.io/blog/2014/11/22/doing-bayesian-data-analysis/" rel="alternate"></link><updated>2014-11-22T22:00:00-05:00</updated><author><name>chtangwin</name></author><id>tag:chtangwin.github.io,2014-11-22:blog/2014/11/22/doing-bayesian-data-analysis/</id><summary type="html">&lt;p&gt;{% ... %}&lt;/p&gt;</summary><category term="Bayesian"></category></entry><entry><title>Bayesian Data Analysis Study Notes</title><link href="https://chtangwin.github.io/blog/2014/11/21/bayesian-study-notes/" rel="alternate"></link><updated>2014-11-21T22:00:00-05:00</updated><author><name>chtangwin</name></author><id>tag:chtangwin.github.io,2014-11-21:blog/2014/11/21/bayesian-study-notes/</id><summary type="html">&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h1 id="Bayesian-Analysis-Learning-Notes"&gt;Bayesian Analysis Learning Notes&lt;a class="anchor-link" href="#Bayesian-Analysis-Learning-Notes"&gt;&amp;#182;&lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;The following resources are useful for learning Bayesian analysis.&lt;/p&gt;
&lt;h2 id="books"&gt;Books&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Probabilistic Programming &amp;amp; Bayesian Methods for Hackers, by camdp&lt;/li&gt;
&lt;li&gt;Doing Bayesian Data Analysis, 2nd ed, by J. Kruschke&lt;/li&gt;
&lt;li&gt;Bayesian Data Analysis, by Gelman, Carlin, Stern, Dunson, Vehtari, and Rubin (1995, 2003, 2013) &lt;/li&gt;
&lt;li&gt;Handbook of Markov Chain Monte Carlo, edited by Brooks, Gelman, Jones, and Meng (2011) &lt;/li&gt;
&lt;li&gt;Data Analysis Using Regression and Multilevel/Hierarchical Models, by Gelman and Hill (2007) &lt;/li&gt;
&lt;li&gt;Applied Bayesian Modelling, 2nd ed, by Congdon.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="software"&gt;Software&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;pyMC&lt;pre&gt;&lt;code&gt;==&amp;gt; github https://github.com/aloctavodia/Doing_bayesian_data_analysis
==&amp;gt; BEST:  https://github.com/strawlab/best
==&amp;gt; The time has come: Bayesian methods for data analysis in the organizational sciences
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;emcee&lt;/li&gt;
&lt;li&gt;Infer.NET&lt;pre&gt;&lt;code&gt;==&amp;gt; Microsoft TrueSkill
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="learning"&gt;Learning&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Chris Fonnesbeck: SciPy 2014 Tutorial, Video 1,2,3&lt;pre&gt;&lt;code&gt;==&amp;gt; github https://github.com/fonnesbeck/scipy2014_tutorial
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://faculty.chicagobooth.edu/nicholas.polson/teaching/41000/index.html"&gt;Business 41000&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jakevdp.github.io/blog/2014/03/11/frequentism-and-bayesianism-a-practical-intro/"&gt;Frequentism and Bayesianism: A Practical Introduction&lt;/a&gt; 4 part series&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.sumsar.net/best_online/"&gt;Bayesian Estimation Supersedes the t-test (BEST) - online&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="research"&gt;Research&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Nicholas Polson&lt;/strong&gt;&amp;#39;s &lt;a href="http://faculty.chicagobooth.edu/nicholas.polson/research/papers.html"&gt;research papers&lt;/a&gt; on finance/economics.&lt;/li&gt;
&lt;li&gt;automatic graphical model construction (structural inference over dynamic Bayesian networks)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="blogs-"&gt;Blogs:&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;* http://doingbayesiandataanalysis.blogspot.com
* https://jakevdp.github.io/
* https://twiecki.github.io/
* http://camdp.com/blogs/
* http://probablisticprogramming.net
* http://healthyalgorithms.com/
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id="machine-learning"&gt;Machine Learning&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;* http://hunch.net
* http://fastML.com
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;</summary><category term="Bayesian"></category></entry><entry><title>GitHub Blog Setup</title><link href="https://chtangwin.github.io/blog/2014/11/20/github-blog-setup/" rel="alternate"></link><updated>2014-11-20T22:09:00-05:00</updated><author><name>chtangwin</name></author><id>tag:chtangwin.github.io,2014-11-20:blog/2014/11/20/github-blog-setup/</id><summary type="html">&lt;p&gt;Now I have decided to use github + pelican for personal blog. The plan is to 
integrate with ipython notebook so all the math and stats notes can be displayed 
easily. &lt;/p&gt;
&lt;h2&gt;Setup Steps&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Follow the instructions from &lt;a href="http://ntanjerome.org/blog/how-to-setup-github-user-page-with-pelican/"&gt;How to setup Github User Page with Pelican&lt;/a&gt;, up to
the point where first post is done and local devserver is up. The only difference
is that I am using main branch ("master") for all edits. The other &lt;strong&gt;very good&lt;/strong&gt; references are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://mathamy.com/migrating-to-github-pages-using-pelican.html"&gt;Migrating to GitHub Pages using Pelican&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://chdoig.github.io/create-pelican-blog.html"&gt;Creating your blog with Pelican&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In fact, they use pretty themes. I plan to read through carefully later
and see if can use some of their settings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For now, use the same theme as in &lt;a href="http://nbviewer.ipython.org/url/ocefpaf.github.com/python4oceanographers/downloads/notebooks/2013-12-23-blogging.ipynb"&gt;python4oceanographers&lt;/a&gt;, mainly download &lt;em&gt;theme&lt;/em&gt; and &lt;em&gt;plugin&lt;/em&gt; from github, then edit &lt;em&gt;pelicanconf.py&lt;/em&gt; and &lt;em&gt;publishconf.py&lt;/em&gt; scripts.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/jakevdp/pelican-octopress-theme.git
&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/getpelican/pelican-plugins.git
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Write markdown files in &lt;code&gt;conten&lt;/code&gt; folder, then run &lt;code&gt;make devserver&lt;/code&gt; to generate HTML 
for the site, and serves is up locally at &lt;a href="http://localhost:8000"&gt;http://localhost:8000&lt;/a&gt;.
Note that &lt;code&gt;make devserver&lt;/code&gt; will also automatically regenerate the whole site, i.e. run &lt;code&gt;pelican&lt;/code&gt; on &lt;code&gt;content&lt;/code&gt; every time one save a change to a content, configuration, or theme file. Just refresh the page in your browser, and you should immediately see the changes. To shutdown the webserver, use &lt;code&gt;make stopserver&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now we have two repos, one is for &lt;code&gt;blog-source&lt;/code&gt;, the other is actual site under &lt;code&gt;output&lt;/code&gt; directory. See &lt;a href="http://mathamy.com/migrating-to-github-pages-using-pelican.html"&gt;Posting to GitHub&lt;/a&gt; 
for how to publish to username.github.io site. In short summary, use the following commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;blog
&lt;span class="nv"&gt;$ &lt;/span&gt;make publish &lt;span class="c"&gt;# or &amp;quot;pelican content&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;output
&lt;span class="nv"&gt;$ &lt;/span&gt;git add --all
&lt;span class="nv"&gt;$ &lt;/span&gt;git commit -m &lt;span class="s2"&gt;&amp;quot;commit message&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git push origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The disadvantage of previous step is that two checkins are needed for update, one
for &lt;code&gt;blog-source&lt;/code&gt;, the other for actual site. One can use &lt;em&gt;git hooks&lt;/em&gt; to push changes
to both repos at the same time, as shown 
&lt;a href="http://mavant.com/blog/2014/03/10/pelican-git-hooks-github-dot-io/"&gt;here&lt;/a&gt;.
Now one can do the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;vim content/your-message.md
&lt;span class="nv"&gt;$ &lt;/span&gt;git commit -am &lt;span class="s2"&gt;&amp;quot;commit message&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git push origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Workflow&lt;/h2&gt;
&lt;p&gt;I use &lt;code&gt;conda&lt;/code&gt; to manage virtualenv. The normal workflow is going to be like below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;activate myblog
&lt;span class="nv"&gt;$ &lt;/span&gt;vim content/blog-post-file.md  &lt;span class="c"&gt;# add/edit entries&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;... &lt;span class="c"&gt;# test locally till all is good&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git commit -am &lt;span class="s2"&gt;&amp;quot;commit message&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git push origin master
&lt;span class="nv"&gt;$ &lt;/span&gt;deactivate myblog &lt;span class="c"&gt;# or just exit once all done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As to ipython notebook integration and how to use markdown, the blog post
&lt;a href="https://jakevdp.github.io/blog/2013/05/07/migrating-from-octopress-to-pelican/"&gt;Migrating from Octopress to Pelican&lt;/a&gt;
from Jake gives very detailed instructions. Check it out. &lt;/p&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://chdoig.github.io/create-pelican-blog.html"&gt;Creating your blog with Pelican&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mathamy.com/migrating-to-github-pages-using-pelican.html"&gt;Migrating to GitHub Pages using Pelican&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jakevdp.github.io/blog/2013/05/07/migrating-from-octopress-to-pelican/"&gt;Migrating from Octopress to Pelican&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A great reference for &lt;a href="http://futurile.net/resources/blogging/pelican.html"&gt;Pelican&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Daring Fireball site's full documentation for &lt;a href="http://daringfireball.net/projects/markdown/syntax"&gt;Markdown&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;TODO&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;fix 'git push' issue on mobaterm&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Update&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;11-24-2014:&lt;/em&gt; It turns out Pelican only monitors &lt;em&gt;'md'&lt;/em&gt; files in content folder, so any changes to &lt;em&gt;'ipynb'&lt;/em&gt;
would not trigger regeneration of html. One need to edit &lt;code&gt;pelicanconf.py&lt;/code&gt; to disable cache:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;LOAD_CONTENT_CACHE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; False
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now every ipython notebook change requires manually run &lt;code&gt;make html&lt;/code&gt; or &lt;code&gt;make publish&lt;/code&gt;. If anyone knows a better
solution, please let me know.&lt;/p&gt;
&lt;hr /&gt;</summary><category term="blog"></category><category term="python"></category></entry></feed>